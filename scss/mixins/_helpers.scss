// --------------------------------------------------------------
// -- CREATE POSITION BASED PROPERTIES --
// --------------------------------------------------------------

// create single position based property. margin-left: 5rem
@mixin makePositionProperty($property, $value, $position, $unit: rem) {
    #{$property}-#{$position}: #{$value}#{$unit};
}

// iterates through a list of positions creating the appropriate
// property (top, bottom, left, right)
@mixin makePositionProperties($property, $value, $positions, $unit: rem) {
    @each $position in $positions {
        // remove unit for auto, 0, border
        $derivedUnit: if(($value == "auto" or $value == '0' or $property == 'border'), null, $unit);
        @include makePositionProperty($property, $value, $position, $derivedUnit);
    }
}


// --------------------------------------------------------------
// -- CREATE SINGLE PROPERTY --
// --------------------------------------------------------------
// create unit base or other property
@mixin makeProperty($property, $value, $unit: null) {
    // 'full' value implies a unit based property that will be 100%
    $derivedValue: if($value == "full", 100, $value);
    $derivedUnit: if($value == "full", "%", $unit);

    @if ($unit == null) {
        #{$property}: #{$derivedValue};
    } @else {
        #{$property}: #{$derivedValue}#{$derivedUnit};
    }
}

// --------------------------------------------------------------
// -- CREATE SINGLE PROPERTY CLASS --
// --------------------------------------------------------------
// optionally add a breakpoint to make responsive
@mixin makeClass($class, $property, $value) {
    .#{$class} {
        #{$property}: $value;
    }
}
