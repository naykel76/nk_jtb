@use '../base/vars_all' as *;
@use "./makeCssPropertyMixins" as *;
@use "./media" as *;
@use "sass:list";
@use "sass:map";
@use "sass:meta";

// --------------------------------------------------------------
// -- CREATE RESPONSIVE POSITION BASED UTILITY CLASSES --
// --------------------------------------------------------------
// $property (margin, padding, border ... etc) $prefix for class
// name ('m', 'mar', or 'margin ... etc) $direction (x, y, xy, t,
// b, l, r)
//
// - Class Structure: {prefix}{direction}-{lg}-{md}-{sm}
// - The mixin will fetch the required positions to create the
//   class properties based on the $direction passed in.
// - IMPORTANT: size lists need multiple items or a null item
//   $sizes:(5, 0, 0), ""; or $sizes: (5, 0, 0, 0), (3, 2, 1);
// - can take a single or multiple direction
//
// Example Usage:
//

@mixin makeResponsivePositionUtilities($property, $prefix, $direction, $sizes) {
    // get the direction positions (x:(left, right), y:(top, bottom) ... etc)
    $positions: map-get($axis-position-map, $direction);
    // each "list of sizes" in the "sizes-map"
    @each $sizes-list in $sizes {
        // how many lists of sizes
        $numSizes: list.length($sizes-list);
        // this is a work around for compile error with single lists
        @if $numSizes > 2 {
            // define the default class based on 3 responsive sizes
            $class: #{$direction}-#{nth($sizes-list, 1)}-#{nth($sizes-list, 2)}-#{nth($sizes-list, 3)};
            // add fourth size if required
            $class: if($numSizes==4, #{$class}-#{nth($sizes-list, 4)}, $class);

            // use -index to select from the end to ensure correct order with different length lists
            .#{$class} {
                @include makeCssPositionProperty($property, #{nth($sizes-list, -1)}rem, $positions);

                @include from-tablet {
                    @include makeCssPositionProperty($property, #{nth($sizes-list, -2)}rem, $positions);
                }

                @include from-desktop {
                    @include makeCssPositionProperty($property, #{nth($sizes-list, -3)}rem, $positions);
                }

                @if ($numSizes==4) {
                    @include from-widescreen {
                        @include makeCssPositionProperty($property, #{nth($sizes-list, -4)}rem, $positions);
                    }
                }
            }
        }
    }
}
