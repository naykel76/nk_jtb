@use "./base/vars_base" as *;
@use "./base/vars_utility_maps" as *;
@use "./functions/helpers" as *;
@use "./mixins/makeMagicGrid2Cols" as *;
@use "./mixins/media" as *;
@use "sass:list";
@use "sass:map";
@use "sass:string";

@mixin makeMagicGrid($list-of-lists) {
    // must have at least two list
    @each $list in $list-of-lists {
        // exclude empty list when creating single list
        @if ($list != ()) {
            $numBreakPoints: list.length($list);

            $sm: nth($list, -1);
            $md: nth($list, -2);
            $lg: if($numBreakPoints >= 3, nth($list, -3), null);
            $xl: if($numBreakPoints >= 4, nth($list, -4), null);
            $xxl: if($numBreakPoints >= 5, nth($list, -5), null);

            $class: #{$md}_#{$sm};

            @if ($numBreakPoints == 3) {
                $class: #{$lg}_#{$md}_#{$sm};
            } @else if ($numBreakPoints == 4) {
                $class: #{$xl}_#{$lg}_#{$md}_#{$sm};
            } @else if ($numBreakPoints == 5) {
                $class: #{$xxl}_#{$xl}_#{$lg}_#{$md}_#{$sm};
            }

            .cols-#{$class} {
                @include from-small {
                    grid-template-columns: nth(map-get($fr-map-2-col, $sm), 1) nth(map-get($fr-map-2-col, $sm), 2);
                }

                @include from-tablet {
                    grid-template-columns: nth(map-get($fr-map-2-col, $md), 1) nth(map-get($fr-map-2-col, $md), 2);
                }

                @if ($numBreakPoints >= 3) {
                    @include from-laptop {
                        grid-template-columns: nth(map-get($fr-map-2-col, $lg), 1) nth(map-get($fr-map-2-col, $lg), 2);
                    }
                }

                @if ($numBreakPoints >= 4) {
                    @include from-desktop {
                        grid-template-columns: nth(map-get($fr-map-2-col, $xl), 1) nth(map-get($fr-map-2-col, $xl), 2);
                    }
                }
            }
        }
    }
}

// @include makeMagicGrid(((60, 80), ()));
@include makeMagicGrid(((60, 80), (40, 60, 80), (20, 40, 60, 80)));
