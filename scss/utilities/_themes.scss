@use "../base/vars_all" as *;
@use "../mixins/makeColorSchemeAdvanced" as *;
@use "../mixins/colorSchemeSimple" as *;
@use "../mixins/colorShades" as *;
@use "../functions/setTextColor" as *;
@use "sass:map";

// ----------------------------------

// get this to fall back to the base colors???
$alert-theme: (
    "danger-light": (
        "base": hsl(0, 100%, 95%),
        "border-color": hsl(0, 100%, 81%),
        "color": hsl(0, 100%, 15%),
        "title-color": hsl(0, 100%, 30%),
    ),
    "info-light": (
        "base": hsl(211, 94%, 94%),
        "border-color": hsl(211, 94%, 81%),
        "color": hsl(211, 94%, 15%),
        "title-color": hsl(211, 94%, 30%),
    ),
    "warning-light": (
        "base": hsl(50, 92%, 95%),
        "border-color": hsl(50, 92%, 60%),
        "color": hsl(50, 92%, 21%),
        "title-color": hsl(50, 92%, 35%),
    ),
    "success-light": (
        "base": hsl(142, 61%, 92%),
        "border-color": hsl(142, 61%, 81%),
        "color": hsl(142, 61%, 15%),
        "title-color": hsl(142, 62%, 25%),
    ),
    "complement": (
        "base": #ffbfd1,
    ),
);

$default-themes: (
    // "dark": (
    //     "base": $primary,
    //     "link-color": purple,
    // ),
    "primary": (
        "base": $primary,
        "link-color": white,
    ),
    "secondary": (
        "base": $secondary,
        "color": setTextColor($secondary),
        "link-color": $primary,
        "hover-color": $primary,
    ),
    "contrast": (
        "base": $contrast,
    ),
    "white": (
        "base": #fff,
        "default-links": true,
    ),
) !default;

$themes-map: map.merge($alert-theme, $default-themes);

// $key is the theme name, $map is the theme map
@each $theme-name, $map in $themes-map {
    @include makeColorSchemeAdvanced($theme-name, $map);
}

@each $key, $value in $color-map {
    // if the $key NOT in $themes-map, exclude if already in the $themes-map
    @if (not map-has-key($themes-map, $key)) {
        // straight forward color scheme
        .#{$key} {
            @include colorSchemeSimple($value);
        }

        // background only
        .bg-#{$key} {
            background-color: $value;
        }
    }
}


.bg-white {
    background-color: #fff;
}
@include colorShades("bg-grey-", hsl(0, 0%, 7%), 9, 10);
@include colorShades("bg-orange-", hsl(14, 100%, 50%));
@include colorShades("bg-yellow-", hsl(48, 100%, 70%), 9, 3);
@include colorShades("bg-green-", hsl(134, 61%, 41%), 9, 3);

@include colorShades("bg-blue-", #1e3a8a, 9, 6);
// @include colorShades("bg-blue-", hsl(224, 64%, 33%), 9, 6);
