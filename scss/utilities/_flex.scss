// ==========================================================================
// FLEX UTILITY CLASSES
// ==========================================================================
// maps and functions are found throughout the scss file in their respective
// areas to keep them grouped together. All custom maps should be put into
// _custom_vars.scss or they will be overridden on update
// --------------------------------------------------------------------------
// |--\o/-- Maps --\o/--|
// $flex-direction-map
// $flex-justify-map: ** changeable prefix
// $flex-align-items-map: ** changeable prefix
// $flex-grow-map: ** has custom
//
// |--\o/-- Flex Parent--\o/--|
// |--\o/-- Flex Children --\o/--|
// 

// --------------------------------------------------------------------------
// justify-content defines the alignment along the main axis and helps
// distribute extra free space leftover.
// --------------------------------------------------------------------------
// 

$prefix-flex-justify: "ha";
$flex-justify-map: (
    l: flex-start,
    r: flex-end,
    c: center,
    between: space-between,
    around: space-around,
    even: space-evenly,
);
    
@each $key, $value in $flex-justify-map {
    .#{$prefix-flex-justify}-#{$key} {
        justify-content: $value;
    }
}

// --------------------------------------------------------------------------
// align-items defines the alignment along the cross axis on the current line.
// Think of it as the justify-content version for the cross-axis.
// --------------------------------------------------------------------------
// 

$prefix-align-items: "va";
$flex-align-items-map: (
    t: flex-start,
    b: flex-end,
    c: center,
    stretch: stretch,
    baseline: baseline,
);

@each $key, $value in $flex-align-items-map {
    .#{$prefix-align-items}-#{$key} {
        align-items: $value;
    }
}

// --------------------------------------------------------------------------

$flex-direction-map: (column: column,
    column-reverse: column-reverse,
    row: row,
    row-reverse: row-reverse,
);

// --------------------------------------------------------------------------



// if a custom map exists then merge it
@if variable-exists(custom-flex-grow-map) {
    $flex-grow-map: map-merge($flex-grow-map, $custom-flex-grow-map);
}

// --------------------------------------------------------------------------

// ==========================================================================
// |--\o/-- Flex Parent--\o/--|
// ==========================================================================

// parent class options must be nested in master class for specificity
.flex {
    display: flex;
    flex-wrap: wrap;

    &.nowrap {
        flex-wrap: nowrap;
    }

    @each $key,
    $value in $flex-direction-map {
        .#{$key} {
            flex-direction: $value;
        }
    }
}

.inline-flex {
    display: inline-flex;
}

.flex-col {
    display: flex;
    flex-direction: column;
}





// ==========================================================================
// |--\o/-- Flex Children --\o/--|
// ==========================================================================
$flex-grow-map: ("0": 0,
    "1": 1,
    "2": 2,
);

// keep outside of parent class for less specificity (not dependant on parent)
@each $key,
$value in $flex-grow-map {
    .fg#{$key} {
        flex-grow: $value;
    }
}
