@use "../base/vars_base" as *;
@use "../base/vars_base" as *;
@use "../base/vars_utility_maps" as *;
@use "../functions/helpers" as *;
@use "../mixins/makeMagicClass" as *;
@use "../mixins/makeMagicGrid2Cols" as *;
@use "../mixins/makeMagicGridEqualWidths" as *;
@use "../mixins/media" as *;
@use "sass:list";
@use "sass:map";
@use "sass:string";

// ---------------- BEFORE YOU DO ANYTHING CRAZY ------------------
// ALL MAGIC MIXINS MUST HAVE AT LEAST TWO MAPS OR YOU WILL GET AN
// AN 'UNDEFINED' ERROR BECAUSE IT TREATS A SINGLE MAP AS A LIST
// ---------------- BEFORE YOU DO ANYTHING CRAZY ------------------

$equal-width-magic-columns: ((4, 2, 1), (3, 2, 1), (3, 1, 1), (2, 1)) !default;
$grid-gap-magic-sizes: ((5, 3, 2), (5, 3), (4, 2), (3, 1)) !default;
$grid-gap-sizes: (0, 0.5, 1, 1.25, 1.5, 2, 3, 4, 5) !default;

// --------------------------------------------------------------------------
// -- GRID AND GRID GAP --
// --------------------------------------------------------------------------

.grid {
    display: grid;
    gap: $grid-gap;
}

.gg {
    gap: $grid-gap;
}

@each $size in $grid-gap-sizes {
    $class: escapeDecimal($size);

    .grid-#{$class} {
        display: grid;
        gap: #{$size}rem;
    }

    .gg-#{$class} {
        gap: #{$size}rem;
    }
}

// --------------------------------------------------------------------------
// -- MAKE MAGIC CLASSES --
// --------------------------------------------------------------------------

// grid gap gg-{n}-? (each breakpoint)
@include makeMagicClass("gg", grid-gap, ($grid-gap-magic-sizes), $unit: "rem");

// --------------------------------------------------------------------------
// -- MAGIC GRID FIXED WIDTH  --
// --------------------------------------------------------------------------

// currently starts at md, (anything under is final size) . not convinced I need to go smaller
@include makeMagicGridEqualWidths($equal-width-magic-columns);

// --------------------------------------------------------------------------
// -- TWO COLUMN RESPONSIVE MAGIC GRID --
// --------------------------------------------------------------------------

// // NK::TD catch error if size not in the fr-map i.e.100

// this is throwing an error but I am not sure I need it??

// $magic-grid-sizes-2cols: ((25, 25), (30, 50), (70, 60));
// @include makeMagicGrid2Cols($magic-grid-sizes-2cols);

// --------------------------------------------------------------------------
// -- TWO COLUMN NON-RESPONSIVE GRIDS --
// --------------------------------------------------------------------------

// DEPRECIATE, I think this is a bit primitive and there are better classes

// -- TWO COLUMN EQUAL WIDTHS (NON-RESPONSIVE) --
@for $i from 1 through $num-grid-cols {
    .cols-#{$i} {
        grid-template-columns: repeat($i, minmax(0, 1fr));
    }
}

// -- TWO COLUMN UN-EQUAL WIDTHS (NON-RESPONSIVE) --
// minmax prevents blowout
@each $key, $fr-units in $fr-map-2-col {
    // specify the first column size,then calculate the second column width
    $class: #{$key}\:#{(100 - $key)};
    .cols-#{$class} {
        grid-template-columns: minmax(0, nth($fr-units, 1)) minmax(0, nth($fr-units, 2));
    }
}
