@use "../base/vars_all" as *;
@use "../mixins/media" as *;

// -- CONTAINER --
// -----------------------------------
// there is no need to add a tonne of media queries for the
// container because the min() width does a pretty good job!
// think of container size as maximum-width up to a maximum-size.

// 1. Use capital M in min() function to prevent clash between
//    sass and css. This works because sass is case-sensitive, but
//    CSS is not.
.#{$container-class} {
    width: Min($container-max, $container-max-widescreen); // 1.
    margin-right: auto;
    margin-left: auto;
    position: relative;
}

.fullwidth {
    width: 100%;
    max-width: 100%;
}

.z-1000 {
    z-index: 1000;
}

.cover {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
.round {
    border-radius: 100vmax;
}

.overlay {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    overflow-y: auto;
    background: rgba(31, 41, 155, 0.6);
    z-index: 1000;
}

.cursor-pointer {
    cursor: pointer;
}

.cursor-default {
    cursor: default;
}

.cursor-events-none {
    pointer-events: none;
}

.no-click {
    pointer-events: none;
}

.close {
    color: rgb(238, 235, 235);
    cursor: pointer;
    height: 1.25rem; // nice default size
    width: 1.25rem; // nice default size

    &:hover {
        color: rgb(163, 69, 88);
        cursor: pointer;
    }
    &:active {
        color: rgb(220, 20, 60);
        cursor: pointer;
    }
}

// Adds a divider line between elements. IMPORTANT: This will only work on items that do not have
// padding as the class uses top and bottom padding to seperate items then adds a border-top
.divider-y > * {
    border-top: 1px solid $base-border-color;
    padding-top: $content-gap;
    padding-bottom: $content-gap;

    &:first-child {
        border-top: none;
        padding-top: 0;
    }

    &:last-child {
        padding-bottom: 0;
    }
}

// which one ????
.divide-y > :not([hidden]) ~ :not([hidden]) {
    border-top: $border;
}
//
// -----------------------------------
.spinner {
    border: 8px solid #f3f3f3;
    border-top: 8px solid #3498db;
    border-radius: 50%;
    width: 38px;
    height: 38px;
    animation: spin 2s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

// -- STRIPED SECTIONS --
// -----------------------------------
//
.zebra section:nth-child(2n + 2):not(.primary):not(.secondary) {
    background: rgb(245, 245, 245);
}
