@use '../functions/helpers' as *;
@use '../functions/map-and-list-helpers' as *;
@use '../maps_and_variables/base' as *;
@use '../maps_and_variables/colors' as *;
@use 'sass:map';

// ============================================================================
// Positioning, Display, and Visibility Property Maps
// ============================================================================

// prettier-ignore
$display: ( block, flex, inline, inline-block, inline-flex, ( hidden: none ), table, table-cell);

// prettier-ignore
$inset: ( auto: auto, full: 100%, );

$position: (static, absolute, fixed, relative, sticky);

// prettier-ignore
$visibility: ( collapse, ( invisible: hidden ), visible);

// ============================================================================
// Border and Outline Property Maps
// ============================================================================
// Border and outline properties share the same style values in CSS.  The only
// difference lies in their behavior: borders affect layout space, while
// outlines do not.

$border-styles: (solid, dashed, dotted, double, hidden, none);
$border-widths: ( base: 1px, 1: px-to-rem(1), 2: px-to-rem(2), 3: px-to-rem(3), 4: px-to-rem(4), 5: px-to-rem(5) ) !default;

$border-radius-values: (0, 0.25, 0.5, 0.75, 1, 1.5, 2) !default;
$border-radius-variants: ( xs: 0.125rem, sm: 0.25rem, base: 0.375, lg: 0.5rem, xl: 0.75rem, full: 9999rem ) !default;
$border-radius: smart-merge($border-radius-values, $border-radius-variants) !default;

$outline-styles: $border-styles !default;
$outline-widths: $border-widths !default;

// ============================================================================
// Spacing Property Maps (margin, padding, gap, inset)
// ============================================================================
$spacing-values: (0, 0.125, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 4, 5) !default;

$margin-variants: ( base: $base-gap, auto: auto ) !default;
$margin-map: map.merge($margin-variants, list-to-map($spacing-values));

$padding-variants: ( base: $base-padding ) !default;
$padding-map: map.merge($padding-variants, list-to-map($spacing-values));

// ============================================================================
// Typography Property Maps
// ============================================================================
// Font weights are not combined because the variants use the `font-` prefix,
// while the values use the `fw-` prefix.

$font-weight-values: ( 1: 100, 2: 200, 3: 300, 4: 400, 5: 500, 6: 600, 7: 700, 8: 800, 9: 900 ) !default;
$font-weight-variants: ( thin: 100, extralight: 200, light: 300, normal: 400, medium: 500, semibold: 600, bold: 700, extrabold: 800, black: 900 ) !default;

// $font-weight: smart-merge($font-weight-values, $font-weight-variants) !default;

//  Container sizes
// ============================================================================
$base-container-size: 1200px !default;
$container-variants: ( base: $base-container-size, sm: $sm, md: $md, lg: $lg, xl: $xl, xxl: $xxl ) !default;

//  Layout property maps
// ============================================================================
$z-index-values: (0, 1, 50, 100, (bottom: -1), (top: 999)) !default;

// Effects and Transitions
// ============================================================================
$opacity-values: (0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1);

//  Flex and Grid
// ============================================================================
$order-map: (1, 2, 3, 4, 5, 6, 7, 8) !default;
$gap-values: (0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 2, 3, 4, 5) !default;
$gap-variants: (sm:.75, base: 1.25, lg:2) !default;
$gap-map: smart-merge($gap-values, $gap-variants) !default;

// ============================================================================
//  Sizing maps and variants
// ============================================================================
// height and width properties
$height-width: ( auto: auto, full: 100%, fit: fit-content, max: max-content, min: min-content ) !default;
$height: smart-merge((screen: 100vh), $height-width) !default;
$width: smart-merge((screen: 100vw), $height-width) !default;

// sizing values
$sizing-pixels: (200px, 250px, 300px, 400px, 600px) !default;
$sizing-rem: (0, 1, 1.25, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24) !default;
$sizing-breakpoint-variants: ( xs: 30rem, sm: $sm, md: $md, lg: $lg, xl: $xl, xxl: $xxl ) !default;
$sizing-map: smart-merge($sizing-rem, $sizing-pixels, $sizing-breakpoint-variants) !default;

// ============================================================================
//  Positional values and map
// --------------------------------------------------------------------------
//  Used for top, right, bottom, left, and inset utility classes.
// ============================================================================
$positional-values: (0, 0.25, 0.5, 1, 1.5, 2, 3, 4) !default;
$positional-map: smart-merge($positional-values, $inset) !default;



// ============================================================================
// Magic Properties
// ============================================================================
$magic-grid-patterns: ((4, 2, 1), (4, 3, 2, 1), (3, 2, 1), (3, 1, 1)) !default;
$magic-gap-patterns: ((5, 3, 2), (5, 3), (4, 2), (3, 1)) !default;

$margin-magic-y: ((5, 3, 2), (3, 2, 1)) !default;
$padding-magic-y: ((5, 3, 2), (5, 3, 2, 2), (3, 2, 1)) !default;