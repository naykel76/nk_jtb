@use '../maps_and_variables/base' as *;
@use '../maps_and_variables/property-maps' as *;
@use '../maps_and_variables/colors' as *;
@use '../functions/map-and-list-helpers' as *;
@use 'sass:map';

// ### Map Naming Convention
// ===========================================================================
// Use the following convention for defining values, variants, and CSS property values in SCSS maps:

// When only CSS property values are needed, use the property name as the map name:
// $position: (static, absolute, fixed, relative, sticky);

// For utility class generation with values, variants and css property values, use the following naming convention:
// * **`$<name>-values`** — raw or ordered numeric values used in class generation
// * **`$<name>-variants`** — named key:value pairs for semantic, responsive, or CSS property variants
// * **`$<name>-map`** — final merged map, used in class generators

// Note: Variants can include both custom semantic values AND CSS property values (like auto, inherit, etc.)

// ```
// $spacing-values: (0, 0.25, 0.5, 1, 1.5, 2) !default;
// $spacing-variants: (sm: 0.75rem, lg: 2rem, auto: auto, base: 1rem) !default;
// $spacing-map: smart-merge($spacing-values, $spacing-variants) !default;
// ```

// ==========================================================================
// -- SPACING -- (margin, padding, gap, inset)
// ==========================================================================


// Magic Variants
$margin-magic-y: ((5, 3, 2), (3, 2, 1)) !default;
$padding-magic-y: ((5, 3, 2), (5, 3, 2, 2), (3, 2, 1)) !default;

// ==========================================================================
// -- SIZING -- (width, height)
// ==========================================================================

// ==========================================================================
// -- BORDER -- (radius, width, color)
// ==========================================================================