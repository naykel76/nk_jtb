@use '../maps_and_variables/base' as *;
@use '../maps_and_variables/layout' as *;
@use '../maps_and_variables/colors' as *;
@use '../functions/map-and-list-helpers' as *;
@use 'sass:map';

// ### Core Convention

// * **`$<name>-values`** — raw or ordered values used in class generation
// * **`$<name>-variants`** — named key\:value pairs for semantic or responsive variants
// * **`$<name>-map`** — final merged map, used in class generators

// ```
// $spacing-values: (0, 0.25, 0.5, 1, 1.5, 2, 3, 4) !default;
// $spacing-variants: (sm: 0.75, md: 1.25, lg: 2) !default;
// $spacing-map: smart-merge($spacing-values, $spacing-variants) !default;
// ```

// ```
// $size-values: (auto, full, screen) !default;
// $size-variants: (sm: 16rem, md: 32rem, lg: 64rem) !default;
// $size-map: smart-merge($size-values, $size-variants) !default;
// ```

// ```
// $color-values: (primary, secondary, accent, muted) !default;
// $color-variants: ( primary: #007bff, secondary: #6c757d) !default;
// $color-map: smart-merge($color-values, $color-variants) !default;
// ```

// ==========================================================================
//  Border, and border-radius sizes
// ==========================================================================
$border-radius-values: (0, 0.25, 0.5, 0.75, 1, 1.5, 2) !default;
$border-radius-variants: ( xs: 0.125rem, sm: 0.25rem, base: 0.375, lg: 0.5rem, xl: 0.75rem, full: 9999rem, ) !default;
$border-radius-map: smart-merge($border-radius-values, $border-radius-variants) !default;

// is it possible to just pass in the size or do i need both the key and value?
// For the time being use key-value pair instead of values to make it easier
// manage unit and class name
$border-width-sizes: (0: 0, 1: 1px, 2: 2px, 3: 3px, 4: 4px, 5: 5px) !default;

// ==========================================================================
//  Border, and border-radius sizes
// ==========================================================================
$border-colors: map.remove( $color-map, 'danger', 'dark', 'info', 'light', 'success', 'warning' ) !default;

//  Container sizes
// ==========================================================================
$base-container-size: 1200px !default;
$container-variants: ( base: $base-container-size, sm: $sm, md: $md, lg: $lg, xl: $xl, xxl: $xxl ) !default;

//  Layout property maps
// ==========================================================================
$z-index-values: (0, 1, 50, 100, (bottom: -1), (top: 999)) !default;

// Effects and Transitions
// ==========================================================================
$opacity-values: (0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1);

//  Flex and Grid
// ==========================================================================
$order-map: (1, 2, 3, 4, 5, 6, 7, 8) !default;
$gap-sizes: (0, 0.25, 0.5, 1, 1.25, 1.5, 2, 3, 4, 5) !default;
$gap-variants: (sm:.75, base: 1.25, lg:2) !default;
$gap-map: smart-merge($gap-sizes, $gap-variants) !default;

//  Space sizes and variants for margin and padding utilities
// ==========================================================================
$spacing-values: (0, 0.125, 0.25, 0.5, 0.75, 0.875, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 4, 5) !default;
$padding-variants: ( default: $content-padding ) !default;
$margin-variants: ( base: 1.5, auto: auto ) !default;
$padding-map: map.merge($margin-variants, list-to-map($spacing-values));
$margin-map: map.merge($margin-variants, list-to-map($spacing-values));

// ==========================================================================
//  Sizing maps and variants
// ==========================================================================
// Sizing variants are tied directly to the breakpoint scale. This keeps things
// consistent, reduces mental overhead, and makes it easier to think in terms of
// layout.
//
// Variant names match specific breakpoints or carry semantic meaning.

$sizing-pixels: (200px, 250px, 300px, 400px, 600px) !default;
$sizing-rem: (0, 1, 1.25, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24) !default;
$sizing-breakpoint-variants: ( xs: 20rem, sm: $sm, md: $md, lg: $lg, xl: $xl, xxl: $xxl ) !default;
$sizing-height-variants: ( screen: 100vh, full: 100%, fit: fit-content, max: max-content, min: min-content ) !default;
$sizing-width-variants: ( screen: 100vw, full: 100%, fit: fit-content, max: max-content, min: min-content ) !default;

// this is not the complete map of all the sizes, variants, and pixels
$sizing-map: smart-merge($sizing-rem, $sizing-pixels, $sizing-breakpoint-variants) !default;

// ==========================================================================
// Font sizes and variants
// ==========================================================================
$letter-spacing-variants: ( tighter: -0.1em, tight: -0.05em, normal: 0em, wide: 0.05em, wider: 0.1em, widest: 0.25em) !default;
