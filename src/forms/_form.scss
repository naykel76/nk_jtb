@use "../mixins/media" as *;
@use "../forms/control" as *;

// -- Base Elements --
// ==========================================================================

label {
    font-weight: 600;
    font-size: 0.875rem;
    // Excludes labels with any class to prevent margin issues with elements
    // like .file or .accordion. This could be a problem if you want the margin
    // but apply a class to the label. In that case, you will need to handle it
    // in the specific component.
    &:not([class]) {
        margin-block-end: 0.375rem;
    }
}

// !! Do not include a width here, the `frm-row` class will handle
// it. This allows more flexibility when using the form elements
// outside of the `frm-row` class

textarea,
select,
input {
    @extend %control;
}

button,
select {
    cursor: pointer;
}

// 1. :has is not supported in firefox yet. Expected release is
//    2023-12-19 This is not really a problem when you use the
//    default height of 1rem because everything aligns well enough.
//    But if you change the height, you will need add utility
//    classes to the label to align the input.

label:has(input[type="checkbox"], input[type="radio"]) {
    display: inline-flex;
    align-items: center;
}

// 1. handle the case when the input is nested inside the label and
//    use :where selector to prevent specificity issues

:where(label > input[type="checkbox"], label > input[type="radio"]) {
    height: 1rem;
    width: 1rem;
    margin-inline-end: 0.5rem;
}

// -- frm-row --
// ==========================================================================

.frm-row {
    position: relative;
    display: flex;
    flex-direction: column;

    &.inline {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 1rem;

        label {
            margin: 0;
            //         // exclude width class to make it easier to override or
            //         // can also use flex-basis to override width
            &:not([class*="w-"]) {
                width: 10rem;
            }
            //         flex-shrink: 0; // prevent shrink for 100%
            //         margin-top: 4px; // better alignment
        }
    }
}

// 2. let the addon border sit on top of the control border. Don not set too
//    high or it will create problems for overlay
// 3. this is a hack so the addon can be placed before the input to deal with
//    input border radius.
//
// NK::TD the hack to arrange the addon before the input can be reviewed when
// firefox supports the :has selector.

.withAddons {
    display: flex;
    flex-direction: row;

    :where(.leadingAddon, .trailingAddon) {
        display: inline-flex;
        align-items: center;
        padding-inline: $ctrl-padding-x;
        border: $ctrl-border;
        font-size: $ctrl-font-size;
        color: #333;
        background: #fafafa;
        z-index: 1; // 2.
    }

    .leadingAddon {
        border-top-left-radius: $ctrl-border-radius;
        border-bottom-left-radius: $ctrl-border-radius;
        ~ input {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            margin-left: -1px; // prevent double border
        }
    }

    .trailingAddon {
        border-top-right-radius: $ctrl-border-radius;
        border-bottom-right-radius: $ctrl-border-radius;
        order: 3; // 3.
        ~ input {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            margin-right: -1px; // prevent double border
        }
    }
}
