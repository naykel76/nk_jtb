@use '../forms/control' as *;
@use '../../tmp427/state' as *;
@use '../utilities/transition' as *;
@use '../functions/color-functions' as *;
@use '../maps_and_variables/colors' as *;
@use '../maps_and_variables/config' as *;
@use '../maps_and_variables/components' as *;

// ==========================================================================
// -- BASE CLASS --
// ==========================================================================
// items that are in themes are more difficult to override in the
// base class. For example, setting the border-width in the base
// class will do nothing because the theme border takes precedence.
// I don't really see it as a problem because utilities are king!

.#{$button-identifier} {
    @extend %control;
    @extend %transition;

    background: $btn-bg;
    color: $btn-color;
    font-weight: 600;
    justify-content: center;
    padding-inline: 1.25rem;
    text-align: center;
    text-transform: $btn-text-transform;

    // !-WARNING-! changing the vertical alignment affects buttons with icons
    vertical-align: bottom; // keep buttons aligned to inputs
    white-space: nowrap; // prevent text wrapping

    &:not(:disabled, .disabled) {
        cursor: pointer;
    }

    @include hover($btn-bg);
    @include active($btn-bg);
}

// ==========================================================================
// -- THEMES AND VARIATIONS --
// ==========================================================================
//
//  must explicitly create btn state to override base class because
//  theme only apply when the `withState` modifier is included
//

@each $key, $color in $color-map {
    .#{$button-identifier}.#{$key} {
        @include hover($color);
        @include active($color);
    }
}
