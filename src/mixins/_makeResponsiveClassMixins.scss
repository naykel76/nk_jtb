@use "./media" as *;
@use './makePropertyMixins' as *;

////
/// @group responsive-class-makers
////

// ======== BEFORE YOU DO ANYTHING CRAZY ======================================
// SASS does not support interpolation for @include so there is no choice other
// than creating multiple mixins using using multiple if-else statements.
// ============================================================================

/// Generate responsive classes for one or more properties, starting FROM the
/// specified breakpoints, across a range of breakpoints.
///
/// @param {Map} $props - The map of properties and values.
/// @param {String} $identifier - A part of the base class name.
/// @param {List} $breakpoints - The list of breakpoints.
///
/// @example scss - Usage
/// \@include makeFromBreakpoint(
///     $class: "txt-abc",
///     $props: ( font-size: #333, line-height: 1 ),
///     $breakpoints: ( "sm", "md" )
/// );
///
/// // @media (min-width: 576px) {
/// //     .sm\:txt-abc {
/// //         font-size: #333;
/// //         line-height: 1;
/// //     }
/// // }
///
/// // @media (min-width: 768px) {
/// //     .md\:txt-abc {
/// //         font-size: #333;
/// //         line-height: 1;
/// //     }
/// // }

@mixin makeFromBreakpoint($props, $identifier, $breakpoints) {
    @each $bp in $breakpoints {
        $derived-class: #{$bp}\:#{$identifier};
        .#{$derived-class} {
            @if ($bp == "sm") {
                @include from-sm {
                    @include createProperties($props);
                }
            } @else if($bp == "md") {
                @include from-md {
                    @include createProperties($props);
                }
            } @else if($bp == "lg") {
                @include from-lg {
                    @include createProperties($props);
                }
            } @else if($bp == "xl") {
                @include from-xl {
                    @include createProperties($props);
                }
            } @else if($bp == "xxl") {
                @include from-xxl {
                    @include createProperties($props);
                }
            }
        }
    }
}

/// Generate responsive classes for one or more properties, starting TO the
/// specified breakpoints, across a range of breakpoints.
///
/// @param {Map} $props - The map of properties and values.
/// @param {String} $identifier - A part of the base class name.
/// @param {List} $breakpoints - The list of breakpoints.

@mixin makeToBreakpoint($props, $identifier, $breakpoints) {
    @each $bp in $breakpoints {
        $derived-class: #{$bp}\:#{$identifier};
        .to-#{$derived-class} {
            @if ($bp == "sm") {
                @include to-sm {
                    @include createProperties($props);
                }
            } @else if($bp == "md") {
                @include to-md {
                    @include createProperties($props);
                }
            } @else if($bp == "lg") {
                @include to-lg {
                    @include createProperties($props);
                }
            } @else if($bp == "xl") {
                @include to-xl {
                    @include createProperties($props);
                }
            } @else {
                @error 'The device '#{$bp}' is not available for this mixin, you need to remove it from the args list.';
            }
        }
    }
}

/// Generate responsive classes for one or more properties, starting ON the
/// specified breakpoints, across a range of breakpoints.
///
/// @param {Map} $props - The map of properties and values.
/// @param {String} $identifier - A part of the base class name.
/// @param {List} $breakpoints - The list of breakpoints.

@mixin makeOnBreakpoint($props, $identifier, $breakpoints) {
    @each $bp in $breakpoints {
        $derived-class: #{$bp}\:#{$identifier};
        .on-#{$derived-class} {
            @if ($bp == "sm") {
                @include on-sm {
                    @include createProperties($props);
                }
            } @else if($bp == "md") {
                @include on-md {
                    @include createProperties($props);
                }
            } @else if($bp == "lg") {
                @include on-lg {
                    @include createProperties($props);
                }
            } @else if($bp == "xl") {
                @include on-xl {
                    @include createProperties($props);
                }
            } @else if($bp == "xxl") {
                @include on-xxl {
                    @include createProperties($props);
                }
            }
        }
    }
}
