@use "../base/vars_utility_maps" as *;
@use "../../mixins/media" as *;
@use "sass:list";

// mobile = 100
// small = 100
// medium = 50
// large = 30

// only need to add 1st column percentage, 2nd is calculated
// (25, 25) is shorthand for {25:75}_{25:75}_{100}

// The more sizes you add will cover more breakpoints.

// There is no need to specify a size for the smallest breakpoint as it will be automatically set to 100 percent in the make function.

// For example, if there are 2 sizes in the list there will be 3 breakpoints lg, md, and sm.

// In this example, only the first column width has been set as the second column width will be calculate and included automatically.

// Grid will display in rows by default, size are min-size so you do not need to worry about adding the smallest size as it will be 100% by default


@mixin makeMagicGrid2Cols($listsOfValues) {
    // must have at least two list
    @each $list in $listsOfValues {
        // exclude empty list when creating single list
        @if ($list != ()) {
            $numBreakPoints: list.length($list);

            $smValue: nth($list, -1);
            $mdValue: nth($list, -2);
            $lgValue: if($numBreakPoints >= 3, nth($list, -3), null);
            $xlValue: if($numBreakPoints >= 4, nth($list, -4), null);
            $xxlValue: if($numBreakPoints >= 5, nth($list, -5), null);

            $class: #{$mdValue}_#{$smValue};

            @if ($numBreakPoints == 3) {
                $class: #{$lgValue}_#{$mdValue}_#{$smValue};
            } @else if ($numBreakPoints == 4) {
                $class: #{$xlValue}_#{$lgValue}_#{$mdValue}_#{$smValue};
            } @else if ($numBreakPoints == 5) {
                $class: #{$xxlValue}_#{$xlValue}_#{$lgValue}_#{$mdValue}_#{$smValue};
            }

            .cols-#{$class} {
                @include from-sm {
                    grid-template-columns: nth(map-get($fr-conversion-2-col, $smValue), 1) nth(map-get($fr-conversion-2-col, $smValue), 2);
                }

                @include from-md {
                    grid-template-columns: nth(map-get($fr-conversion-2-col, $mdValue), 1) nth(map-get($fr-conversion-2-col, $mdValue), 2);
                }

                @if ($numBreakPoints >= 3) {
                    @include from-lg {
                        grid-template-columns: nth(map-get($fr-conversion-2-col, $lgValue), 1) nth(map-get($fr-conversion-2-col, $lgValue), 2);
                    }
                }

                @if ($numBreakPoints >= 4) {
                    @include from-xl {
                        grid-template-columns: nth(map-get($fr-conversion-2-col, $xlValue), 1) nth(map-get($fr-conversion-2-col, $xlValue), 2);
                    }
                }
            }
        }
    }
}
