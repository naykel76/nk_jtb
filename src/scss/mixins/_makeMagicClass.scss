@use "../../mixins/media" as *;
@use "../../mixins/helpers" as *;
@use "../../base/vars_utility_maps" as *;
@use "../functions/classNaming" as *;
@use "sass:list";
@use "sass:map";
@use "sass:string";

// ---------------- BEFORE YOU DO ANYTHING CRAZY ------------------
// This mixin can handle both position based and normal css
// properties.There must always be at least two lists or there will
// be an undefined error. To prevent error for a single list just
// and an empty list ().
// ---------------- BEFORE YOU DO ANYTHING CRAZY ------------------

@mixin handleValue($property, $value, $unit, $positions) {
    @if ($positions == null) {
        @include makeProperty($property, $value, $unit);
    } @else {
        @include makePositionProperties($property, $positions, $value);
    }
}

@mixin makeMagicClass($property, $listsOfValues, $identifier, $unit: rem, $direction: null) {
    // get the positions required to build up the class
    // (x:(left, right), y:(top, bottom) ... etc)
    $positions: map-get($axis-position-map, $direction);

    @each $list in $listsOfValues {
        // exclude empty list when creating single list
        @if ($list != ()) {
            $numBreakPoints: list.length($list);

            // set the value of the BP based on position using negative
            // numbers. This makes sure the position is always the same
            $baseValue: nth($list, -1);
            $smValue: nth($list, -2);
            $mdValue: if($numBreakPoints >= 3, nth($list, -3), null);
            $lgValue: if($numBreakPoints >= 4, nth($list, -4), null);
            $xlValue: if($numBreakPoints >= 5, nth($list, -5), null);
            $xxlValue: if($numBreakPoints >= 6, nth($list, -6), null);

            $derived-class: derivedClass($list);

            // You want ALL classes to have the opportunity to build
            // so DO NOT use else-if statements
            .#{$identifier}-#{$derived-class} {
                @include handleValue($property, $baseValue, $unit, $positions);

                @include from-sm {
                    @include handleValue($property, $smValue, $unit, $positions);
                }

                @if ($numBreakPoints >= 3) {
                    @include from-md {
                        @include handleValue($property, $mdValue, $unit, $positions);
                    }
                }

                @if ($numBreakPoints >= 4) {
                    @include from-lg {
                        @include handleValue($property, $lgValue, $unit, $positions);
                    }
                }

                @if ($numBreakPoints >= 5) {
                    @include from-xl {
                        @include handleValue($property, $xlValue, $unit, $positions);
                    }
                }

                @if ($numBreakPoints >= 6) {
                    @include from-xxl {
                        @include handleValue($property, $xxlValue, $unit, $positions);
                    }
                }
            }
        }
    }
}
