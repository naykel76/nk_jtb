@use "../../base/vars_colors" as *;
@use "../../base/vars_base" as *;
@use "../../functions/colorFunctions" as *;
@use "../../functions/helpers" as *;
@use "sass:map";

$old-alert-theme: ();


// // THIS IS A WORK IN PROGRESS AND HAS LIMITATIONS. MAKE SURE YOU ONLY USE
// // NUMBERS AND DO NOT INCLUDE 1

// @function removeLeadingZero($value) {
//     // wrap in quotes and convert to string
//     $class: "#{$value}";
//     // search and escape decimals
//     @return strReplace($class, "0.", "");
// }

// @mixin createColorOpacity($list-of-opacity, $color) {
//     @each $opacity in $list-of-opacity {
//         @if ($opacity > 9) {
//             @error "Opacity in the createColorOpacity function must be between 0 and 1";
//         }

//         // strip leading zero and decimal if exists, and convert to number
//         $suffix: removeLeadingZero($opacity);

//         .bg-#{$color}-0#{$suffix} {
//             background-color: convertToRgba(map-get($color-map, $color), $opacity);
//         }
//     }
// }
