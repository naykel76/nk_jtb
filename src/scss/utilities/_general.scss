@use "../../base/vars_base" as *;
@use "../../base/vars_identifier" as *;
@use "../../mixins/media" as *;

// This file is for general utilities that don't have a home,

// -- CONTAINER --
// -----------------------------------
// there is no need to add a tonne of media queries for the
// container because the min() width does a pretty good job!
// think of container size as maximum-width up to a maximum-size.

// 1. Use capital M in min() function to prevent clash between
//    sass and css. This works because sass is case-sensitive, but
//    CSS is not.
.#{$container-identifier} {
    // make the max a little smaller to act as padding
    width: Min(92%, $container-max-xxl); // 1.
    margin-right: auto;
    margin-left: auto;
    position: relative;

    @include from-md {
        width: Min($container-max, $container-max-xxl); // 1.
    }
}

.cover {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}
//
//
//
//
//
//
// These are utilities that could easily be created using multiple utility classes
//
//
//
//
//
//
//
//
//
//
.round {
    border-radius: 100vmax;
}

.cursor-pointer {
    cursor: pointer;
}

.cursor-default {
    cursor: default;
}

.cursor-events-none {
    pointer-events: none;
}

.no-click {
    pointer-events: none;
}

.close {
    color: rgb(199, 197, 197);
    cursor: pointer;
    height: 1rem;
    width: 1rem;

    &:hover {
        color: rgb(163, 69, 88);
        cursor: pointer;
    }
    &:active {
        color: rgb(220, 20, 60);
        cursor: pointer;
    }
}

// Adds a divider line between elements. IMPORTANT: This will only work on items that do not have
// padding as the class uses top and bottom padding to seperate items then adds a border-top
.divider-y > * {
    border-top: 1px solid $border-color;
    padding-top: $content-gap;
    padding-bottom: $content-gap;

    &:first-child {
        border-top: none;
        padding-top: 0;
    }

    &:last-child {
        padding-bottom: 0;
    }
}

// which one ????
.divide-y > :not([hidden]) ~ :not([hidden]) {
    border-top: $border;
}
//
// -----------------------------------
.spinner {
    border: 8px solid #f3f3f3;
    border-top: 8px solid #3498db;
    border-radius: 50%;
    width: 38px;
    height: 38px;
    animation: spin 2s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}


