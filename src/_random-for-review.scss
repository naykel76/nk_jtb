@use './common-tools' as *;
@use '../tmp427/mixins/build-magic-classes' as *;
@use 'sass:map';

.overlay {
    position: fixed;
    inset: 0;
    overflow-y: auto;
    background: rgb(0 0 0 / 70%);
    z-index: 30;
    margin: 0;
}





.c-py-025 > * {
    padding-block: 0.25rem;
}

.c-py-3 > * {
    padding-block: 3rem;
}


.sticky {
    position: sticky;
    top: 0;
    z-index: 1000;
}


@each $value in $opacity-values {
    $variant: sanitize-class-name($value);
    .hover\:opacity-#{$variant}:hover {
        opacity: $value;
    }
}


// this is not easy to override on the child element unless the
// properties are set as !important but works great otherwise.
.divide-y > :not([hidden]) ~ :not([hidden]) {
    border-top: 1px solid $border-color;
}

//
// -----------------------------------
.close {
    color: rgb(199 197 197);
    cursor: pointer;

    &:hover {
        color: rgb(163 69 88);
        cursor: pointer;
    }

    &:active {
        color: rgb(220 20 60);
        cursor: pointer;
    }
}

//
// -----------------------------------
.spinner {
    border: 8px solid #f3f3f3;
    border-top: 8px solid #3498db;
    border-radius: 50%;
    width: 38px;
    height: 38px;
    animation: spin 2s linear infinite;

    &.sm {
        border: 0.25rem solid #f3f3f3;
        border-top: 0.25rem solid #3498db;
        width: 1.25rem;
        height: 1.25rem;
    }
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}










// mark {
//     background-color: var(--bgColor-attention-muted, var(--color-attention-subtle));
//     color: var(--fgColor-default, var(--color-fg-default));
// }