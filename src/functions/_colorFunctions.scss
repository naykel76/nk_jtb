@use "../variables/base" as *;

// ==========================================================================
// set text colour based on the background
// ==========================================================================

@function setTextColor($bg) {

    // return the default color if transparent
    @if alpha($bg) == 0 {
        @return $color;
    }

    $color-brightness: round((red($bg) * 299) + (green($bg) * 587) + calc((blue($bg) * 114) / 1000));
    $light-color: round((red(#ffffff) * 299) + (green(#ffffff) * 587) + calc((blue(#ffffff) * 114) / 1000));
    // if background is dark, then the text color should be light
    @if abs($color-brightness) < calc($light-color / 2) {
        //  if the base $color is already light, then use it.
        @if (lightness($color) > 55) {
            @return $color;
        } @else {
            @return hsl(0, 0%, 100%);
        }
    } @else {
        //  if the $color is light, then set it dark
        @if (lightness($color) > 55) {
            @return #333;
        } @else {
            @return $color;
        }
    }
}

// ==========================================================================
// Set transparent border color based on the background color.
// ==========================================================================
// this is not a perfect solution because sometimes a dark color can
// have a low lightness, and visa-versa, but it is good enough.
//

@function setBorderShadeColor($bg, $opacity: 0.15) {
    $lightness: lightness($bg);
    @if ($lightness > 50) {
        @return rgba(0, 0, 0, $opacity); // Black
    } @else {
        @return rgba(255, 255, 255, $opacity); // White
    }
}

// ----------------------------------------------------------------
// -- CONVERT COLOR TO RGBA --
// ----------------------------------------------------------------
// will convert when passing in rgb, hex or hsl
//
// manually set a colour to convert
// background-color: convertToRgba(#e23465);
//
// optionally set the opacity
// background-color: convertToRgba(#e23465, 0.5);
//
// fetch a color from the color-map
// background-color: convertToRgba(map-get($color-map, 'blue'));

@function convertToRgba($color, $alpha: 1) {
    @return rgba(red($color), green($color), blue($color), $alpha);
}
