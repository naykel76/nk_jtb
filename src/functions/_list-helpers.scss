@use 'sass:list';
@use 'sass:map';

// ==========================================================================
// Converts a list of values into a map where each value is used as both key and
// value.  Useful for generating utility maps from shorthand lists.
//
// Example usage:
//  list-to-map(("green", 5, 16px)) â†’ (green: green, 5: 5, 16px: 16px)
//
// Note: Values must be wrapped in parentheses to be treated as a single list.
// ==========================================================================
@function list-to-map($list) {
    $map: ();

    @each $value in $list {
        // prettier-ignore
        $map: map.merge( $map, ( $value: $value ) );
    }

    @return $map;
}

// ==========================================================================
// Remove an item from a Sass list.
// ==========================================================================
// Iterates through a list and returns a new list with the specified value removed.
//
// - Compares each item using strict inequality (!=).
// - Preserves the order of the original list.
// - Does not modify the original list.
//
// Example:
//      $list: (sm, md, lg, xl);
//      $new-list: remove-from-list($list, lg);
//      Result: (sm, md, xl)
// ==========================================================================
@function remove-from-list($list, $value) {
    $result: ();
    @each $item in $list {
        @if $item != $value {
            $result: list.append($result, $item);
        }
    }
    @return $result;
}
