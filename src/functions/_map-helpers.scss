@use './strExplode' as *;
@use 'sass:map';
@use 'sass:meta';

// https://itnext.io/advanced-use-of-sass-maps-bd5a47ca0d1a

// ---------------------------------------------------------
// Check if nested map has a value by the keys
//
// Example: deepMapCheck($nested-map, 'key-1', 'key-2')
// ---------------------------------------------------------
@function deepMapCheck($map, $keys...) {
    @if meta.type-of($map) != 'map' {
        @error 'The argument $map: `#{$map}` is of incorrect type: `#{meta.type-of($map)}`. Type of `Map` is required!';
    }

    @each $key in $keys {
        @if not map.has-key($map, $key) {
            @return false;
        }
        $map: map.get($map, $key);
    }

    @return true;
}

// ---------------------------------------------------------
// Get a value from nested map by the keys
//
// Example: deepMapGet($dfr-spacing, 'xs', 'y')
// ---------------------------------------------------------
@function deepMapGet($map, $keys...) {
    @if meta.type-of($map) != 'map' {
        @error 'The argument $map: `#{$map}` is of incorrect type: `#{meta.type-of($map)}`. Type of `Map` is required!';
    }

    @each $key in $keys {
        $map: map.get($map, $key);
    }

    @return $map;
}

// ---------------------------------------------------------
// Get value from nested map using dot notation string
//
// Example: get('border.radius.xs')
// Requires: $dfr-config map to be defined in scope
// ---------------------------------------------------------


@function get($key, $map: $dfr-config) {
    $keys: strExplode($key, '.');

    @if not deepMapCheck($map, $keys...) {
        @error 'The argument $map: `#{$map}` doesn\'t has some of the $keys: `#{$keys}`!';
    }

    @return deepMapGet($map, $keys...);
}
