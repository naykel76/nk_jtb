@use 'sass:string';
@use 'sass:meta';
@use 'sass:list';

// Escape decimal for use in selectors, e.g. 20.5 â†’ 20\.5
@function escape-decimal($int) {
    $escaped: '#{$int}';

    @return str-replace($escaped, '.', '\\.');
}

// Replace all occurrences of `$search` in `$string` with `$replace`.
@function str-replace($string, $search, $replace: '') {
    $index: string.index($string, $search);

    @if $index {
        /* stylelint-disable-next-line scss/operator-no-newline-after */
        @return string.slice($string, 1, $index - 1) + $replace +
            str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
    }

    @return $string;
}

// Split a string into a list by a given delimiter.
@function str-explode($string, $delimiter: '') {
    @if meta.type-of($string) != 'string' or meta.type-of($delimiter) != 'string' {
        @error '$string must be a String, got `#{meta.type-of($string)}` (`#{$string}`)';
    }

    $result: ();

    @if string.length($delimiter) == 0 {
        @for $i from 1 through string.length($string) {
            $result: list.append($result, string.slice($string, $i, $i));
        }

        @return $result;
    }

    @while true {
        $index: string.index($string, $delimiter);

        @if $index {
            $result: list.append($result, string.slice($string, 1, $index - 1));
            $string: string.slice($string, $index + string.length($delimiter));
        } @else {
            @return list.append($result, $string);
        }
    }
}

// ==============================================================================
// CASTING HELPERS
// ==============================================================================

// Cast a number to a string.
@function to-string($int) {
    @return '#{$int}';
}

// ==============================================================================
//
// ==============================================================================

// Remove trailing 'rem' from a string if present
@function strip-rem($string) {
    @if string.slice($string, -3) == 'rem' {
        @return string.slice($string, 1, -4);
    }

    @return $string;
}
