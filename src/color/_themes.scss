@use "../base/vars_base" as *;
@use "../base/vars_colors" as *;
@use "../functions/colorFunctions" as *;
@use "../mixins/createBasicColorScheme" as *;
// @use "../mixins/makeColorSchemeAdvanced" as *;
// @use "sass:map";

$alert-theme: (
    "danger-light": (
        "base": hsl(0, 100%, 95%),
        "border-color": hsl(0, 100%, 81%),
        "color": hsl(0, 100%, 15%),
        "title-color": hsl(0, 100%, 30%),
    ),
    "info-light": (
        "base": hsl(211, 94%, 94%),
        "border-color": hsl(211, 94%, 81%),
        "color": hsl(211, 94%, 15%),
        "title-color": hsl(211, 94%, 30%),
    ),
    "warning-light": (
        "base": hsl(50, 92%, 95%),
        "border-color": hsl(50, 92%, 60%),
        "color": hsl(50, 92%, 21%),
        "title-color": hsl(50, 92%, 35%),
    ),
    "success-light": (
        "base": hsl(142, 61%, 92%),
        "border-color": hsl(142, 61%, 81%),
        "color": hsl(142, 61%, 15%),
        "title-color": hsl(142, 62%, 25%),
    ),
);

$default-themes: (
    "primary": (
        "base": $primary,
        // "link-color": white,
    ),
    "secondary": (
        "base": $secondary,
        "color": setTextColor($secondary),
        // "link-color": $primary,
        // "hover-color": $primary,,
    ),
    "accent": (
        "base": $accent,
        "color": setTextColor($accent),
        // "link-color": $primary,
        // "hover-color": $primary,,
    ),
    "white": (
        "base": #fff,
        "default-links": true,
    ),
) !default;

// $themes-map: map.merge($old-alert-theme, $default-themes);


$advanced-themes: ();
// --------------------------------------------------------------------------
// -- CREATE BASIC COLOR SCHEMES AND BACKGROUND --
// --------------------------------------------------------------------------
// - Remove color if in advanced-color-scheme

@each $key, $value in $color-map {
    // if the $key NOT in $advanced-themes, exclude if already in the $advanced-themes
    @if (not map-has-key($advanced-themes, $key)) {
        .#{$key} {
            @include createBasicColorScheme($value);
        }

        // background only
        .bg-#{$key} {
            background-color: $value;
        }
    }
}
