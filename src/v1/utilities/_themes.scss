@use '../../functions/get' as *;
@use '../../v1/core-imports' as *;
@use '../../v1/functions/map-and-list-helpers' as *;
@use '../../v1/maps_and_variables/' as *;
@use '../../v1/mixins/build-themes' as *;
@use 'sass:map';

$alert-themes: (
    'danger-light': (
        'base': get('red.50', $tailwind-colors),
        'color': get('red.700', $tailwind-colors),
        'border-color': get('red.500', $tailwind-colors)
    ),
    'info-light': (
        'base': get('blue.50', $tailwind-colors),
        'color': get('blue.700', $tailwind-colors),
        'border-color': get('blue.500', $tailwind-colors)
    ),
    'warning-light': (
        'base': get('yellow.50', $tailwind-colors),
        'color': get('yellow.700', $tailwind-colors),
        'border-color': get('yellow.500', $tailwind-colors)
    ),
    'success-light': (
        'base': get('green.50', $tailwind-colors),
        'color': get('green.700', $tailwind-colors),
        'border-color': get('green.500', $tailwind-colors)
    )
);



// ==========================================================================
// Create a new map `$themes-map` where each entry in `$color-map` is used
// to define a new theme with a base color. The base color is directly taken
// from the `$color-map` and stored in `$themes-map` with its key.
// ==========================================================================

// this is the format that is required to use the `build-basic-theme` mixin
// $x: (
//     'primary': ( 'base': #2563eb )
//     'yellow': ( 'base': #ffda47 ),
// );

$themes-map: ();

@each $color, $value in $color-map {
    // For each color in `$color-map`, create a new map with the key `$color`
    // and store a 'base' property with the value from `$color-map`.
    $themes-map: map.set(
        $themes-map,
        $color,
        (
            'base': $value
        )
    );
}


// ==========================================================================
// Builds
// ==========================================================================
// 
// @each $theme-name, $map in $alert-themes {
//     @include build-basic-theme($theme-name, $map);
// }

// build basic themes from base colors
@each $theme-name, $map in $themes-map {
    @include build-basic-theme($theme-name, $map);
}