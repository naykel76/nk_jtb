@use '../mixins/class-makers' as *;
@use '../mixins/build-magic-grid' as *;
@use '../common-tools' as *;
@use 'sass:map';

// ==========================================================================
// -- GRID --
// ==========================================================================
// DEPRECATED
.grid {
    display: grid;
    gap: #{map.get($gap-map, 'base')}rem;
}

// ==========================================================================
// -- GRID SPANNING --
// ==========================================================================
// 1 is redundant, but it's there because I am lazy!
@for $i from 1 through $grid-num-cols {
    .col-span-#{$i} {
        grid-column: span $i;
    }
}

// ==========================================================================
// -- EQUAL WIDTHS COLUMNS(RESPONSIVE AND NON-RESPONSIVE) --
// ==========================================================================
// NKTD: Refactor to use 'builders'
@for $i from 1 through $grid-num-cols {
    // base class
    .cols-#{$i} {
        grid-template-columns: repeat($i, minmax(0, 1fr));
    }

    $props: (
        grid-template-columns: repeat($i, minmax(0, 1fr))
    );
    $breakpoints: ('base', 'sm', 'md', 'lg', 'xl');
    $class: 'cols-#{$i}';

    @include make-from-breakpoint($props, $class, $breakpoints);
}


// prettier-ignore
$grid-properties-map: (
    gap: (
        prefix: "gap-",
        values: $gap-map,
        unit: "rem",
    ),
    justify-items: (
        prefix: "justify-items-",
        values: ( center, end, start, stretch ) ),
    justify-self: (
        prefix: "justify-self-",
        values: ( auto, center, end, start, stretch )
    ),
    place-content: (
        prefix: "place-content-",
        values: ( baseline, center, end, space-around, space-between, space-evenly, start, stretch )
    ),
    place-items: (
        prefix: "place-items-",
        values: ( baseline, center, end, start, stretch )
    ),
    place-self: (
        prefix: "place-self-",
        values: ( auto, center, end, start, stretch )
    )
);

// ==========================================================================
// Builds
// ==========================================================================
@include build-property-classes($grid-properties-map, $responsive: true);

// ==========================================================================
// -- MAGIC CLASSES --
// ==========================================================================

@include build-magic-classes(grid-gap, ($magic-gap-patterns), 'gap');
@include build-magic-grid($magic-grid-patterns);
