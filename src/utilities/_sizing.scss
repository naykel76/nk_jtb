@use '../v1/core-imports' as *;
@use "sass:map";

$sizing-merged:smart-merge($sizing-variants, $sizing-pixels, $sizing-rem);

// Build the base properties for width and height separately. This allows for
// more flexibility when you want to add a custom size to either the width or
// the height without affecting the other. For example 80vh can be merged into
// the base height class without affecting the width.

// prettier-ignore
$sizing-properties-map: (
    height: (prefix: "h-", values: map.merge($sizing-merged, $sizing-base-heights), unit: "rem"),
    width: (prefix: "w-", values: map.merge($sizing-merged, $sizing-base-widths), unit: "rem", breakpoints: ("sm", "md", "lg", "xl")),
    max-height: (prefix: "maxh-", values: $sizing-merged, unit: "rem"),
    max-width: (prefix: "maxw-", values: $sizing-merged, unit: "rem"),
    min-height: (prefix: "minh-", values: $sizing-merged, unit: "rem"),
    min-width: (prefix: "minw-", values: $sizing-merged, unit: "rem")
);

@include build-utilities($sizing-properties-map, $responsive: true);

// ==========================================================================
// -- WIDTH AND HEIGHT UTILITY CLASSES --
// ==========================================================================

// -- WIDTH & HEIGHT --
@each $size in $sizing-rem {
    $class: handle-invalid($size);
    .wh-#{$class} {
        width: #{$size}rem;
        height: #{$size}rem;
    }
}


.vh100 {
    height: 100vh;
}
.vh80 {
    height: 80vh;
}