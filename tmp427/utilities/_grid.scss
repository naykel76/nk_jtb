@use '../mixins/generate-magic-classes' as *;
@use '../mixins/magicGridGenerators' as *;
@use '../../src/build-core' as *;
@use '../../src/mixins/class-makers' as *;

// $gap: get('grid.default-gap', $config);
// $num-grid-cols: get('grid.num-grid-cols', $config);

// // ==========================================================================
// // -- GRID --
// // ==========================================================================
// // NK::TD refactor into a more reusable mixin
// // Must sit above utility classes

// @each $size in $gap-sizes {
//     $class: escapedecimal($size);
//     .grid-#{$class} {
//         display: grid;
//         gap: #{$size}rem;
//     }
// }

// .grid {
//     display: grid;
//     gap: $gap;
// }

// .gap {
//     gap: $gap;
// }

// // ==========================================================================
// // -- GRID SPANNING --
// // ==========================================================================
// // 1 is redundant, but it's there because I am lazy!
// @for $i from 1 through $num-grid-cols {
//     .col-span-#{$i} {
//         grid-column: span $i;
//     }
// }

// // ==========================================================================
// // -- EQUAL WIDTHS COLUMNS(RESPONSIVE AND NON-RESPONSIVE) --
// // ==========================================================================
// @for $i from 1 through $num-grid-cols {
//     // base class
//     .cols-#{$i} {
//         grid-template-columns: repeat($i, minmax(0, 1fr));
//     }

//     // responsive classes
//     $props: (
//         grid-template-columns: repeat($i, minmax(0, 1fr))
//     );
//     $breakpoints: ('base', 'sm', 'md', 'lg', 'xl');
//     $class: 'cols-#{$i}';

//     @include make-from-breakpoint($props, $class, $breakpoints);
// }

// // ==========================================================================
// // -- MAGIC CLASSES --
// // ==========================================================================
// // THIS IS EXPERIMENTAL AND MAY NOT STAY IN THE CODEBASE

// // ---------------- BEFORE YOU DO ANYTHING CRAZY ------------------
// // ALL MAGIC MIXINS MUST HAVE AT LEAST TWO MAPS OR YOU WILL GET AN
// // AN 'UNDEFINED' ERROR BECAUSE IT TREATS A SINGLE MAP AS A LIST
// // ---------------- BEFORE YOU DO ANYTHING CRAZY ------------------

// $grid-gap-magic-sizes: ((5, 3, 2), (5, 3), (4, 2), (3, 1)) !default;

// @include generate-magic-classes(grid-gap, ($grid-gap-magic-sizes), 'gap');

// $equal-width-magic-columns: ((4, 2, 1), (4, 3, 2, 1), (3, 2, 1), (3, 1, 1)) !default;

// @include magicGridEqualWidths($equal-width-magic-columns);
